@page
@model Knjizara.Areas.Identity.Pages.Account.UserBookListModel

@{
    ViewData["Title"] = "UserBookList";
}

<div class="d-flex justify-content-between">
    <h2>Posuđene knjige</h2>
    <button class="btn btn-warning" onclick="location.href='@Url.Action("StartPayment", "PayPal", new { name = Model.CurrentUser.UserName, price = Model.CurrentUser.LateFee })'">Plati @Model.CurrentUser.LateFee<span>€</span> zakasnine</button>
</div>


@if (Model.BorrowedBooks?.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.BorrowedBooks[0].Book.Title)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.BorrowedBooks[0].Book.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BorrowedBooks[0].CreatedAt)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BorrowedBooks[0].ReturnOnDate)
                </th>
                <th>
                    Vracanje za
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.BorrowedBooks)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Book.Title)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Book.Author.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ReturnOnDate)
                    </td>
                    <td>
                        @if (item.DateDifference.HasValue)
                        {
                            @Html.DisplayFor(modelItem => item.DateDifference.Value.Days)
                            <span> dana</span>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="p-2">Nemate posuđenih knjiga</p>
}

<h2>Kupljene knjige</h2>

@if (Model.PurchasedBooks?.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PurchasedBooks[0].Book.Title)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.PurchasedBooks[0].Book.Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PurchasedBooks[0].CreatedAt)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.PurchasedBooks)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Book.Title)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Book.Author.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatedAt)
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="p-2">Nemate kupljenih knjiga</p>
}
